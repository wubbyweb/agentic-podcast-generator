[project]
name = "agentic-podcast-generator"
version = "0.1.0"
description = "An intelligent multi-agent system for content generation"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "asyncio>=3.4.3",
    "click>=8.1.7",
    "python-dotenv>=1.0.0",
    "sqlalchemy>=2.0.23",
    "alembic>=1.13.1",
    "aiosqlite>=0.19.0",
    "greenlet>=3.0.0",
    "aiohttp>=3.9.1",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.2",
    "scrapy>=2.11.0",
    "selenium>=4.16.2",
    "google-api-python-client>=2.112.0",
    "pydantic>=2.5.2",
    "jsonschema>=4.20.0",
    "structlog>=23.2.0",
    "colorlog>=6.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-mock>=3.12.0",
    "httpx>=0.25.2",
    "black>=23.12.0",
    "flake8>=6.1.0",
    "mypy>=1.8.0",
    "coverage>=7.3.0",
]

[project.scripts]
agentic = "main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--asyncio-mode=auto"
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "scrapy.*",
    "selenium.*",
    "googleapiclient.*"
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["agents", "config", "database", "services", "utils"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/conftest.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]